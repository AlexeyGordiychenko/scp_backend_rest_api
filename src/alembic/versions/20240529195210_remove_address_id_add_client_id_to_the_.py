"""Remove address_id, add client_id to the address table

Revision ID: c0640381f042
Revises: a6b594b1ec36
Create Date: 2024-05-29 19:52:10.447758

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "c0640381f042"
down_revision: Union[str, None] = "a6b594b1ec36"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "address", sa.Column("client_id", sqlmodel.sql.sqltypes.GUID(), nullable=False)
    )
    op.drop_index("ix_address_id", table_name="address")
    op.create_index(
        op.f("ix_address_client_id"), "address", ["client_id"], unique=False
    )
    op.create_foreign_key(None, "address", "client", ["client_id"], ["id"])
    op.drop_constraint("client_address_id_fkey", "client", type_="foreignkey")
    op.drop_column("address", "id")
    op.drop_column("client", "address_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "client", sa.Column("address_id", sa.UUID(), autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        "client_address_id_fkey", "client", "address", ["address_id"], ["id"]
    )
    op.add_column(
        "address", sa.Column("id", sa.UUID(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "address", type_="foreignkey")
    op.drop_index(op.f("ix_address_client_id"), table_name="address")
    op.create_index("ix_address_id", "address", ["id"], unique=False)
    op.drop_column("address", "client_id")
    # ### end Alembic commands ###
